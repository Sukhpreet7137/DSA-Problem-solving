#include <bits/stdc++.h>
using namespace std;
class Solution {

  public:
  void solve(vector<int>nums,vector<int>ans,vector<vector<int>>&result,int i)
    {
        if(i==nums.size())
        {
            result.push_back(ans);
            return ;
        }
        ans.push_back(nums[i]);
        solve(nums,ans,result,i+1);
        ans.pop_back();
        while(i+1<nums.size() && nums[i]==nums[i+1])
        {
            i++;
        }
        solve(nums,ans,result,i+1);
    }
    vector<vector<int>> printUniqueSubsets(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<int>ans;
        vector<vector<int>>result;
        solve(nums,ans,result,0);
        return result;
    }
};
int main() {
    int t = 1;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;
        vector<int> nums(n);
        for (int i = 0; i < n; i++) {
            cin >> nums[i];
        }
        // char marker;
        // cin >> marker;

        Solution obj;
        vector<vector<int>> ans = obj.printUniqueSubsets(nums);
        sort(ans.begin(), ans.end());
        //   printAns(ans);
        cout << "[ ";
        for (int i = 0; i < ans.size(); i++) {
            cout << "[ ";
            for (int j = 0; j < ans[i].size(); j++) cout << ans[i][j] << " ";
            cout << "]";
        }
        cout << " ]\n";

        // cout<< "~\n";
    }

    return 0;
}
