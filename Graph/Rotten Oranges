int orangesRotting(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<pair<int,int>,int>>q;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==2)
                {
                    q.push({{i,j},0});
                }
            }
        }
        vector<vector<int>>vis(n,vector<int>(m,0));
        int xx[]={1,0,-1,0};
        int yy[]={0,-1,0,1};
        int t=0;
        while(!q.empty())
        {
            int xc=q.front().first.first;
            int yc=q.front().first.second;
            int time=q.front().second;
            t=max(time,t);
            q.pop();
            
            for(int k=0;k<4;k++)
            {
                int newx=xc+xx[k];
                int newy=yc+yy[k];
                if(newx>=0 && newx<n && newy>=0 && newy<m && grid[newx][newy]==1 && !vis[newx][newy])
                {
                    vis[newx][newy]=1;
                    q.push({{newx,newy},time+1});
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1 && !vis[i][j])
                {
                    return -1;
                }
            }
        }
       return t; 
    }
